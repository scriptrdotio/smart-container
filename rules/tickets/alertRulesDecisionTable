//Get payload parameters
var pl = null;
var requestBody = request.body;
if (!requestBody) {
	pl = request.parameters.payload;
	pl = JSON.parse(pl);
} else {
	pl = requestBody.payload;
}

//START TABLE DECISION CODE
function execute(pl) {

var decision = [];

//PRESCRIPT START
var log = require("log");
log.setLevel("INFO");
log.info("something from decision table " + JSON.stringify(pl))
pl.tampered = pl.tampered == "true"? true : false


	
//PRESCRIPT END

//RULES EVALUATION START
if(typeof pl != "object") {
  return[];
} else { 
	  if((pl != null && pl["batteryLevel"] != undefined && pl["batteryLevel"] <10) && (pl != null && pl["tampered"] != undefined && pl["tampered"] ===false)){
       decision.push({ "BATTERY_TICKET": "10" });
	} 
	 else if((pl != null && pl["batteryLevel"] != undefined && pl["batteryLevel"] <10) && (pl != null && pl["tampered"] != undefined && pl["tampered"] ===true)){
       decision.push({ "BATTERY_TICKET": "10","TAMPERED_TICKET": "true" });
	} 
	 else if((pl != null && pl["batteryLevel"] != undefined && pl["batteryLevel"] <20) && (pl != null && pl["tampered"] != undefined && pl["tampered"] ===false)){
       decision.push({ "BATTERY_TICKET": "20" });
	} 
	 else if((pl != null && pl["batteryLevel"] != undefined && pl["batteryLevel"] <20) && (pl != null && pl["tampered"] != undefined && pl["tampered"] ===true)){
       decision.push({ "BATTERY_TICKET": "20","TAMPERED_TICKET": "true" });
	} 
	 else if((pl != null && pl["batteryLevel"] != undefined && pl["batteryLevel"] <30) && (pl != null && pl["tampered"] != undefined && pl["tampered"] ===false)){
       decision.push({ "BATTERY_TICKET": "20" });
	} 
	 else if((pl != null && pl["batteryLevel"] != undefined && pl["batteryLevel"] <30) && (pl != null && pl["tampered"] != undefined && pl["tampered"] ===true)){
       decision.push({ "BATTERY_TICKET": "30","TAMPERED_TICKET": "true" });
	} 
	 else if((pl != null && pl["batteryLevel"] != undefined && pl["batteryLevel"] <40) && (pl != null && pl["tampered"] != undefined && pl["tampered"] ===false)){
       decision.push({ "BATTERY_TICKET": "40" });
	} 
	 else if((pl != null && pl["batteryLevel"] != undefined && pl["batteryLevel"] <40) && (pl != null && pl["tampered"] != undefined && pl["tampered"] ===true)){
       decision.push({ "BATTERY_TICKET": "40","TAMPERED_TICKET": "true" });
	} 
	 else if((pl != null && pl["batteryLevel"] != undefined && pl["batteryLevel"] >40) && (pl != null && pl["tampered"] != undefined && pl["tampered"] ===true)){
       decision.push({ "TAMPERED_TICKET": "true" });
	} 
}
//RULES EVALUATION END

//POSTSCRIPT START
//Variable "decision" is the object returned by the decision table execution.
//Variable "decision" format is [{"action1": "value1", "action2":  "value2"}].
console.log(JSON.stringify(decision))
return decision;
//POSTSCRIPT END

}
//Check if value is "in" or is "not in" array
//return true or false
function evalArrayOperation(value, operator,  array) {
	if(operator == "in") {
		return (array.indexOf(value)>-1);
	} else {
		return (array.indexOf(value) == -1) ;
	} 
}

//isAny function, when condition expression is not important
function isAny(param) {
	return true;
}

//START_REST_CALL 
return execute(pl);
//END_REST_CALL