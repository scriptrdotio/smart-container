var uuidGenerator = require("locks/generator/uuid");
/**
* Generates number of random geolocation points given a center and a radius.
* @param  {Object} center A JS object with lat and lng attributes.
* @param  {number} radius Radius in meters.
* @param {number} count Number of points to generate.
* @return {array} Array of Objects with lat and lng attributes.
*/
function generateRandomPoints(center, radius, count, tags) {
  var points = [];
  for (var i=0; i<count; i++) {    
    points.push(generateRandomPoint(center, radius));
  }
  return points;
}

function generateRandomLocations(center, radius, count, tags, types, providers) {
  var points = [];
  for (var i=0; i<count; i++) {    
    points.push(generateRandomLocation(center, radius, tags[Math.floor(Math.random() * tags.length)], types[Math.floor(Math.random() * types.length)], providers[Math.floor(Math.random() * providers.length)]));
  }
  return points;
}

function generateRandomLocation(center, radius, tag, type, provider){
	var point = generatePointsInSquare(1)[0];
  	point.bic = tag.bic;
    point.company = tag.company
  	point.city = tag.city;
  	point.country = tag.country;
  	point.type = type;
  	point.id =  tag.bic +"-"+ uuidGenerator.generateSerialNumber();
  	point.provider = provider;
  	return point;
}

/**
* Generates number of random geolocation points given a center and a radius.
* Reference URL: http://goo.gl/KWcPE.
* @param  {Object} center A JS object with lat and lng attributes.
* @param  {number} radius Radius in meters.
* @return {Object} The generated random points as JS object with lat and lng attributes.
*/
function generateRandomPoint(center, radius) {
  var x0 = center.lng;
  var y0 = center.lat;
  // Convert Radius from meters to degrees.
  var rd = radius/77300;

  var u = Math.random();
  var v = Math.random();

  var w = rd * Math.sqrt(u);
  var t = 2 * Math.PI * v;
  var x = w * Math.cos(t);
  var y = w * Math.sin(t);

  var xp = x/Math.cos(y0) + Math.random();

  // Resulting point.
  return {'latitude': y+y0, 'longitude': xp+x0};
}

/**
 * Returns a random integer between min (inclusive) and max (inclusive)
 * Using Math.round() will give you a non-uniform distribution!
 */
function getRandomInt(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
}
//this is temp hack, not taking the center / radius into consideration
function generatePointsInSquare(numberofPoints){
	var points = [];
  	for(var i = 0; i < numberofPoints; i++){
      	var minLat = 45.469767;
      	var maxLat = 45.630399;
      	var maxLong = -73.562798;
      	var minLong = -73.858399;
      	var generatedLat = minLat + (maxLat - minLat ) * Math.random();
      	var generatedLong = minLong + (maxLong - minLong ) * Math.random();  
      	points.push({latitude: generatedLat, longitude: generatedLong})
    }
  	return points;
}

//Generates 200 points that is in a 10km radius from the given lat and lng point.
//return generatePointsInSquare(10);