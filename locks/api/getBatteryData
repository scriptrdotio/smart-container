//query will look like
/*
  	{	lockId: 123123, 
  	}
  	*/
var config = require("locks/config");
var provider = require("locks/lib/provider");
var document = require("document");
var query = {};
if(request.body != null){
	query = request.body;
}else{
  	query = request.parameters.body;
}

if(query != null){
  	try{
    	query = JSON.parse(query);   
  	}catch(e){
    	return "INVALID OR MISSING PARAMETER" + query;
  	}	
}
if(query.lockId == null){
  	return "INVALID OR MISSING PARAMETER: missing lockId"
}
var filter = 'provider = "' + provider.getCompanyName(request.user.id) + '" and id = "' + query.lockId + '"';
if(query.timeframe){
  	if(query.timeframe.start){
      	var date = new Date(query.timeframe.start);
      	var start = date.getFullYear() + "-" + (date.getMonth() + 1) + "-" + date.getDate();
    	filter += " and creationDate<date> > \"" + start + "\"";	  
    }
  	if(query.timeframe.end){
      	var log = require("log");
      	log.setLevel("INFO");
      	var date = new Date(query.timeframe.end);
      	log.info(date);
      	date.setDate(date.getDate() + 1);
      	log.info(date);
      	var end = date.getFullYear() + "-" + (date.getMonth() + 1) + "-" + date.getDate();
    	filter += " and creationDate<date> < \"" + end + "\"";	  
    }
  	
}
var log = require("log");
log.setLevel("INFO");
log.info(filter);
var response = document.query({"query":filter, "fields":"batteryLevel, apsdb.creationTime"});
response = response.result.documents;

var result =  {
 	"battery": {
  		"description": "Lock battery level",
  		"values": []
    }
}

for(var i = 0; i < response.length; i++){
	result.battery.values.push({
      	"value": response[i].batteryLevel,
      	"timestamp": (new Date(response[i]["creationDate"])).toISOString()
    })  
}
return result;