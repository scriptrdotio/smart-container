{"acl":{"read":"nobody","write":"nobody","execute":"scriptr"},"contentType":"application\/vnd.scriptr-javascript","userConfig":"\/*#*SCRIPTR_PLUGIN*#*{\"metadata\":{\"name\":\"SimpleDecisionTable\",\"plugindata\":{\"columns\":[{\"field\":\"recid\",\"caption\":\"Rec. Id\",\"size\":\"100%\",\"resizable\":true,\"hidden\":true,\"noDrag\":true},{\"field\":\"rowtype\",\"caption\":\"Type\",\"size\":\"100%\",\"hidden\":true,\"noDrag\":true},{\"field\":\"name\",\"caption\":\"\",\"size\":\"100%\",\"noDrag\":true,\"editable\":{\"type\":\"text\",\"inTag\":\"\",\"outTag\":\"\",\"style\":\"\",\"items\":[],\"selected\":\"A_Temperature\"},\"sizeType\":\"%\",\"sizeCalculated\":\"405px\",\"min\":120,\"sizeCorrected\":\"33.33%\"},{\"field\":\"fieldType\",\"caption\":\"Type\",\"size\":\"100%\",\"noDrag\":true,\"editable\":{\"type\":\"select\",\"items\":[{\"id\":\"number\",\"text\":\"number\"},{\"id\":\"string\",\"text\":\"string\"},{\"id\":\"boolean\",\"text\":\"boolean\"},{\"id\":\"date\",\"text\":\"date\"},{\"id\":\"function\",\"text\":\"function\"}],\"inTag\":\"\",\"outTag\":\"\",\"style\":\"\"},\"sizeType\":\"%\",\"sizeCalculated\":\"404px\",\"min\":120,\"sizeCorrected\":\"33.33%\"},{\"field\":\"rule1\",\"caption\":\"Rule 1\",\"size\":\"100%\",\"editable\":{\"type\":\"myType\",\"inTag\":\"\",\"outTag\":\"\",\"style\":\"\",\"items\":[],\"selected\":\"> 0\"},\"sizeType\":\"%\",\"sizeCalculated\":\"404px\",\"min\":120,\"sizeCorrected\":\"33.33%\"}],\"records\":[{\"recid\":0,\"name\":\"temperature\",\"rowtype\":\"condition\",\"fieldType\":\"number\",\"style\":{\"4\":\"\"},\"rule1\":\"> 30\",\"rule2\":\"\",\"rule3\":\"\"},{\"recid\":4,\"name\":\"action\",\"rowtype\":\"action\",\"fieldType\":\"string\",\"attr\":\"action='true'\",\"style\":{\"2\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"\",\"8\":\"\",\"9\":\"\"},\"rule1\":\"alert\",\"rule2\":\"\",\"rule3\":\"\",\"rule4\":\"\",\"rule5\":\"\",\"rule6\":\"\"}],\"prescript\":\"var log = require(\\\"log\\\");\\nlog.setLevel(\\\"INFO\\\");\\nlog.info(JSON.stringify(pl));\",\"postscript\":\"var smsmodule = require(\\\"\/nucleo\/api\/twilio\/sms\/smsclient\\\");\\nvar config = require(\\\"\/nucleo\/api\/email\/config\\\");\\nvar document = require(\\\"document\\\")\\n\\nif(decision[0] && decision[0].action){\\n  alert(pl[\\\"id\\\"], decision[0].action);\\n}\\n\\nfunction alert(id, action) {\\n    var body = \\\"Please note that we have detected temperature values above defined threshold. Temperature value is: \\\"+pl[\\\"temperature\\\"]+\\\".\\\";\\n    var subject = pl[\\\"id\\\"]+\\\": Temperature Alert\\\";\\n    if(action == \\\"alert\\\"){\\n        var key = toHex(\\\"notificationSettings\\\");\\n        var results = document.get(key);\\n        if(results.metadata.status == \\\"failure\\\") {\\n            return {status : \\\"failure\\\", errorDetails : \\\"an error has occured when quering Log doc key: \\\" + key, errorMsg: results};\\n        } else {\\n            var doc =  results.result;\\n            var emailsArray = JSON.parse(doc.emails);\\n            var mobilesArray = JSON.parse(doc.mobiles);\\n            if(typeof emailsArray == \\\"string\\\") emailsArray = [emailsArray];\\n            if(typeof mobilesArray == \\\"string\\\") mobilesArray = [mobilesArray];\\n            \/\/ Send Email\\n            for(var i = 0; i < emailsArray.length; i++){\\n                sendMail(emailsArray[i], config.FROM, subject, body);\\n            }\\n            log.info(\\\"SEND EMAILS\\\")\\n            \/\/ Send SMS\\n            for(var y = 0; y < mobilesArray.length; y++){\\n                try {\\n                    var smsClient = new smsmodule.TwilioSMS();\\n                    smsClient.send({\\\"number\\\": mobilesArray[y], \\\"message\\\": config.Body});\\n                }catch(exception){\\n                    return exception;\\n                }\\n            }\\n            \\n        }\\n    } \\n    \\n}\\n\\n\\nfunction toHex(input){\\n    try { hexcase } catch(e) { hexcase=0; }\\n    var hex_tab = hexcase ? \\\"0123456789ABCDEF\\\" : \\\"0123456789abcdef\\\";\\n    var output = \\\"\\\";\\n    var x;\\n    for(var i = 0; i < input.length; i++)\\n    {\\n        x = input.charCodeAt(i);\\n        output += hex_tab.charAt((x >>> 4) & 0x0F)\\n            + hex_tab.charAt( x & 0x0F);\\n    }\\n    return output;\\n}\\n\",\"exclusive\":true}}}*#*#*\/"}